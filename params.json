{
  "name": "Emmi",
  "tagline": "Emmi Solutions Code Challenge",
  "body": "### EMMI Code Challenge Solution.\r\nThis is the final result of the code challenge for Emmi Solutions. Pull it if you like, clone it if you must. Have fun.\r\n\r\n### Requirements\r\nThese were the requirements as initially given (pasted verbatim) :\r\n> Please write a program that lets a human player to play “Tic Tac Toe” game with a computer.\r\nThe computer initially plays by randomly choosing an empty cell in a grid. However, it keeps track of all previous loosing combinations and never loses by following the same sequence of moves. (you can also consider that one loosing combination can be converted into 4 if you rotate the grid by 90, 180, and 270 degrees)\r\nFor simplicity, make it a console game and use text file for storing loosing combinations. To simplify debugging, please write each loosing combination on a separate line like this: (2,2)-(2,3)-(1,1)-(3,3)-(3,1)-(3,2) where the last move need to be changed the next time machine plays.\r\nWhen you are done, put the code on GitHub and send me a link.\r\n\r\nAlso, as follow-up to some questions regarding the challenge:\r\n_**In case of a tie (no winner), is that to be considered a loss?**_\r\n> Ties can be ignored. Only react to actual losses.\r\n\r\n_**Does the example of logging show both the computer and player moves in sequence or only the computer?**_\r\n> The example showed both player and computer moves and the last move was the “fatal” move by the computer which lead to loss. That last move is to be avoided in the future games.\r\n\r\n### Authors and Contributors\r\nAll work is exclusively by Dennis M Fashimpaur (@Fashimpaur)\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}